From d58064d68c7b436ed9c62b020a91ffe646ee60d1 Mon Sep 17 00:00:00 2001
From: Derek Lesho <dlesho@codeweavers.com>
Date: Sun, 13 Oct 2024 15:17:50 +0200
Subject: [PATCH] include: Add defines for GL_MESA_placed_allocation prototype
 extension.

---
 include/GL/glext.h                            | 10 ++++++++++
 src/mapi/glapi/gen/MESA_placed_allocation.xml | 16 ++++++++++++++++
 src/mapi/glapi/gen/gl_API.xml                 |  2 ++
 src/mapi/glapi/gen/marshal_XML.py             |  2 ++
 src/mapi/glapi/gen/static_data.py             |  2 ++
 src/mapi/glapi/registry/gl.xml                | 13 +++++++++++++
 6 files changed, 45 insertions(+)
 create mode 100644 src/mapi/glapi/gen/MESA_placed_allocation.xml

diff --git a/include/GL/glext.h b/include/GL/glext.h
index 8bacaf9906a83..cbb28794fd448 100644
--- a/include/GL/glext.h
+++ b/include/GL/glext.h
@@ -9392,6 +9392,16 @@ GLAPI void APIENTRY glGetFramebufferParameterivMESA (GLenum target, GLenum pname
 #define GL_PACK_INVERT_MESA               0x8758
 #endif /* GL_MESA_pack_invert */
 
+#ifndef GL_MESA_placed_allocation
+#define GL_MESA_placed_allocation 1
+typedef void *(APIENTRY  *GLplacedMapMESA)(GLuint size);
+typedef void (APIENTRY  *GLplacedUnmapMESA)(void *mapping, GLuint size);
+typedef void (APIENTRYP PFNGLSETPLACEDALLOCATORMESAPROC) (GLplacedMapMESA placedMap, GLplacedUnmapMESA placedUnmap);
+#ifdef GL_GLEXT_PROTOTYPES
+GLAPI void APIENTRY glSetPlacedAllocatorMESA (GLplacedMapMESA placedMap, GLplacedUnmapMESA placedUnmap);
+#endif
+#endif /* GL_MESA_placed_allocation */
+
 #ifndef GL_MESA_program_binary_formats
 #define GL_MESA_program_binary_formats 1
 #define GL_PROGRAM_BINARY_FORMAT_MESA     0x875F
diff --git a/src/mapi/glapi/gen/MESA_placed_allocation.xml b/src/mapi/glapi/gen/MESA_placed_allocation.xml
new file mode 100644
index 0000000000000..0074c9899b042
--- /dev/null
+++ b/src/mapi/glapi/gen/MESA_placed_allocation.xml
@@ -0,0 +1,16 @@
+<?xml version="1.0"?>
+<!DOCTYPE OpenGLAPI SYSTEM "gl_API.dtd">
+
+<OpenGLAPI>
+
+<category name="GL_MESA_placed_allocation">
+    <type name="placedMapMESA" size="4" pointer="true"/>
+    <type name="placedUnmapMESA" size="4" pointer="true"/>
+
+    <function name="SetPlacedAllocatorMESA" es2="3.0" desktop="true" no_error="true">
+        <param name="placedMap" type="GLplacedMapMESA"/>
+        <param name="placedUnmap" type="GLplacedUnmapMESA"/>
+    </function>
+</category>
+
+</OpenGLAPI>
diff --git a/src/mapi/glapi/gen/gl_API.xml b/src/mapi/glapi/gen/gl_API.xml
index e356035dd9d6a..6e5c49744e308 100644
--- a/src/mapi/glapi/gen/gl_API.xml
+++ b/src/mapi/glapi/gen/gl_API.xml
@@ -13025,4 +13025,6 @@
 <xi:include href="NV_half_float.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
 <xi:include href="GL4x.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
 
+<xi:include href="MESA_placed_allocation.xml" xmlns:xi="http://www.w3.org/2001/XInclude"/>
+
 </OpenGLAPI>
diff --git a/src/mapi/glapi/gen/marshal_XML.py b/src/mapi/glapi/gen/marshal_XML.py
index de09e2186cc5a..b2d92b548d0bc 100644
--- a/src/mapi/glapi/gen/marshal_XML.py
+++ b/src/mapi/glapi/gen/marshal_XML.py
@@ -112,6 +112,8 @@ class marshal_function(gl_XML.gl_function):
             'GLint64': 8,
             'GLuint64': 8,
             'GLuint64EXT': 8,
+            'GLplacedMapMESA' : self.context.pointer_size,
+            'GLplacedUnmapMESA' : self.context.pointer_size,
         }
         val = mapping.get(type, 9999)
         if val == 9999:
diff --git a/src/mapi/glapi/gen/static_data.py b/src/mapi/glapi/gen/static_data.py
index 6bebde0869884..2acd0bd42e36f 100644
--- a/src/mapi/glapi/gen/static_data.py
+++ b/src/mapi/glapi/gen/static_data.py
@@ -1711,6 +1711,7 @@ offsets = {
     "FramebufferTextureMultiviewOVR": 1675,
     "NamedFramebufferTextureMultiviewOVR": 1676,
     "FramebufferTextureMultisampleMultiviewOVR": 1677,
+    "SetPlacedAllocatorMESA": 1678,
 }
 
 functions = [
@@ -2643,6 +2644,7 @@ functions = [
     "SecondaryColorPointer",
     "SecondaryColorPointerEXT",
     "SelectBuffer",
+    "SetPlacedAllocatorMESA",
     "SeparableFilter2D",
     "ShadeModel",
     "ShaderBinary",
diff --git a/src/mapi/glapi/registry/gl.xml b/src/mapi/glapi/registry/gl.xml
index 3683e0f5b3b85..f88caa264662c 100644
--- a/src/mapi/glapi/registry/gl.xml
+++ b/src/mapi/glapi/registry/gl.xml
@@ -64,6 +64,9 @@ typedef unsigned int GLhandleARB;
         <type>typedef unsigned short <name>GLhalfNV</name>;</type>
         <type requires="GLintptr">typedef GLintptr <name>GLvdpauSurfaceNV</name>;</type>
         <type>typedef void (<apientry/> *<name>GLVULKANPROCNV</name>)(void);</type>
+        <type>typedef void *(<apientry/> *<name>GLplacedMapMESA</name>)(GLuint size);</type>
+        <type>typedef void (<apientry/> *<name>GLplacedUnmapMESA</name>)(void *mapping, GLuint size);</type>
+
     </types>
 
     <kinds>
@@ -23254,6 +23257,11 @@ typedef unsigned int GLhandleARB;
             <param><ptype>GLuint</ptype> <name>index</name></param>
             <param len="2">const <ptype>GLfloat</ptype> *<name>val</name></param>
         </command>
+        <command>
+            <proto>void <name>glSetPlacedAllocatorMESA</name></proto>
+            <param><ptype>GLplacedMapMESA</ptype> <name>placedMap</name></param>
+            <param><ptype>GLplacedUnmapMESA</ptype> <name>placedUnmap</name></param>
+        </command>
         <command>
             <proto>void <name>glShadeModel</name></proto>
             <param group="ShadingModel"><ptype>GLenum</ptype> <name>mode</name></param>
@@ -43404,6 +43412,11 @@ typedef unsigned int GLhandleARB;
                 <enum name="GL_PACK_INVERT_MESA"/>
             </require>
         </extension>
+        <extension name="GL_MESA_placed_allocation" supported="gl">
+            <require>
+                <command name="glSetPlacedAllocatorMESA"/>
+            </require>
+        </extension>
         <extension name="GL_MESA_program_binary_formats" supported="gl|gles2">
             <require>
                 <enum name="GL_PROGRAM_BINARY_FORMAT_MESA"/>
-- 
GitLab

